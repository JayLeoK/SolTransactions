"use strict";
/**
  * @reach/alert v0.18.0
  *
  * Copyright (c) 2018-2022, React Training LLC
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE.md file in the root directory of this source tree.
  *
  * @license MIT
  */

var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/reach-alert.tsx
var reach_alert_exports = {};
__export(reach_alert_exports, {
  Alert: () => Alert
});
module.exports = __toCommonJS(reach_alert_exports);
var React = __toESM(require("react"));
var ReactDOM = __toESM(require("react-dom"));
var import_visually_hidden = require("@reach/visually-hidden");
var import_utils = require("@reach/utils");
var keys = {
  polite: -1,
  assertive: -1
};
var elements = {
  polite: {},
  assertive: {}
};
var liveRegions = {
  polite: null,
  assertive: null
};
var renderTimer;
var AlertRendered = React.forwardRef(function AlertRendered2(_a, forwardedRef) {
  var _b = _a, { as: Comp = "div", children } = _b, props = __objRest(_b, ["as", "children"]);
  return /* @__PURE__ */ React.createElement(Comp, __spreadValues({
    ref: forwardedRef
  }, props), children);
});
var Alert = React.forwardRef(function Alert2(props, forwardedRef) {
  let ownRef = React.useRef(null);
  let ref = (0, import_utils.useComposedRefs)(forwardedRef, ownRef);
  useMirrorEffects(ownRef, props);
  let _a = props, { type: _ } = _a, rest = __objRest(_a, ["type"]);
  return /* @__PURE__ */ React.createElement(AlertRendered, __spreadProps(__spreadValues({
    ref
  }, rest), {
    "data-reach-alert": "",
    "aria-hidden": true
  }));
});
Alert.displayName = "Alert";
function createMirror(type, doc) {
  let key = ++keys[type];
  let mount = (element) => {
    if (liveRegions[type]) {
      elements[type][key] = element;
      renderAlerts();
    } else {
      let node = doc.createElement("div");
      node.setAttribute(`data-reach-live-${type}`, "true");
      liveRegions[type] = node;
      doc.body.appendChild(liveRegions[type]);
      mount(element);
    }
  };
  let update = (element) => {
    elements[type][key] = element;
    renderAlerts();
  };
  let unmount = () => {
    delete elements[type][key];
    renderAlerts();
  };
  return { mount, update, unmount };
}
function renderAlerts() {
  if (renderTimer != null) {
    window.clearTimeout(renderTimer);
  }
  renderTimer = window.setTimeout(() => {
    Object.keys(elements).forEach((elementType) => {
      let regionType = elementType;
      let container = liveRegions[regionType];
      if (container) {
        ReactDOM.render(/* @__PURE__ */ React.createElement(import_visually_hidden.VisuallyHidden, {
          as: "div"
        }, /* @__PURE__ */ React.createElement("div", {
          role: regionType === "assertive" ? "alert" : "status",
          "aria-live": regionType
        }, Object.keys(elements[regionType]).map((key) => React.cloneElement(elements[regionType][key], {
          key,
          ref: null
        })))), liveRegions[regionType]);
      }
    });
  }, 500);
}
function useMirrorEffects(ref, _a) {
  var _b = _a, {
    type: regionType = "polite"
  } = _b, props = __objRest(_b, [
    "type"
  ]);
  let mirror = React.useRef(null);
  React.useEffect(() => {
    let ownerDocument = (0, import_utils.getOwnerDocument)(ref.current);
    if (!ownerDocument)
      return;
    mirror.current = createMirror(regionType, ownerDocument);
    mirror.current.mount(/* @__PURE__ */ React.createElement(AlertRendered, __spreadValues({}, props)));
    return () => {
      var _a2;
      (_a2 = mirror.current) == null ? void 0 : _a2.unmount();
    };
  }, [ref, regionType, ...Object.values(props)]);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Alert
});
//# sourceMappingURL=reach-alert.cjs.dev.js.map